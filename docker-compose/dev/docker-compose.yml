services:
  postgres:
    image: postgres:17.0-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_DB=zarnabdb
      - POSTGRES_USER=arman
      - POSTGRES_PASSWORD=Aa@123456
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - zarnab-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U arman -d zarnabdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    volumes:
      - ./redis_data:/data
    networks:
      - zarnab-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio_data:/data
    networks:
      - zarnab-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build: ../../zarnab-application
    container_name: zarnab_app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - zarnab-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

#  frontend:
#    build: ../../../frontend
#    container_name: zarnab_frontend
#    networks:
#      - zarnab-network

  gateway:
    build: ../../../frontend  # contains nginx.conf and Dockerfile above
    container_name: zarnab_gateway
    ports:
      - "80:80"
    volumes:
      - /etc/letsencrypt/live/zarnab.kiwiapp.ir/fullchain.pem:/etc/letsencrypt/live/zarnab.kiwiapp.ir/fullchain.pem:ro
      - /etc/letsencrypt/live/zarnab.kiwiapp.ir/privkey.pem:/etc/letsencrypt/live/zarnab.kiwiapp.ir/privkey.pem:ro
    networks:
      - zarnab-network
    depends_on:
      - app

networks:
  zarnab-network:
    driver: bridge

