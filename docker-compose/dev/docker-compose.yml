version: '3.8'

services:
  postgres:
    image: postgres:17.0-alpine
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=zarnabdb
      - POSTGRES_USER=arman
      - POSTGRES_PASSWORD=Aa@123456
    networks:
      - zarnab-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U arman -d zarnabdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zarnab-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    ports:
      - "9000:9000" # API Port
      - "9001:9001" # Console Port
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - zarnab-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build: ../../zarnab-application
    container_name: zarnab_app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - zarnab-network

networks:
  zarnab-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:

